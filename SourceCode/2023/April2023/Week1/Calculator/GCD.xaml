<Activity mc:Ignorable="sap sap2010" x:Class="GCD" this:GCD.in_FNum="100" this:GCD.in_SNum="1000" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FNum" Type="InArgument(x:Int32)" />
    <x:Property Name="in_SNum" Type="InArgument(x:Int32)" />
    <x:Property Name="out_GCD" Type="OutArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>758,4300</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GCD_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="GCD" sap:VirtualizedContainerService.HintSize="768,4235" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="Int_FNum" />
      <Variable x:TypeArguments="x:Int32" Name="int_SecNum" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="706,83" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Int_FNum]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_FNum]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="706,83" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_SecNum]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_SNum]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="706,53" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="746,1147" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[in_FNum &gt;in_SNum]" sap:VirtualizedContainerService.HintSize="684,991" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="528,840" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="486,83" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[in_FNum]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[in_FNum - in_SNum]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[in_FNum mod in_SNum = 0 Or in_SNum mod in_FNum =0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="486,629" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_5">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,461" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[in_FNum &gt; in_SNum]" sap:VirtualizedContainerService.HintSize="388,151" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="476,305" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[in_SNum]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[&quot;GCD od two numbers is&quot;+out_GCD.ToString]" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="476,171" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[in_FNum]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="LogMessage_6" Message="[&quot;GCD od two numbers is&quot;+out_GCD.ToString]" />
                      <ui:Break sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Break_5" />
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                </ui:InterruptibleWhile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14" />
            </If.Else>
          </If>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="706,1572" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="670,1404" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="608,83" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[in_FNum]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_FNum - in_SNum]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="608,1170" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
            <ui:InterruptibleWhile.Body>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="572,1002" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_FNum &gt; in_SNum]" sap:VirtualizedContainerService.HintSize="510,891" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,370" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[in_SNum]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;GCD od two numbers is&quot;+out_GCD.ToString]" />
                      <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_6" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,370" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[in_FNum]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;GCD od two numbers is&quot;+out_GCD.ToString]" />
                      <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_2" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ui:InterruptibleWhile.Body>
            <ui:InterruptibleWhile.Condition>
              <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_FNum mod in_SNum = 0 Or in_SNum mod in_FNum =0" />
            </ui:InterruptibleWhile.Condition>
          </ui:InterruptibleWhile>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <ui:InterruptibleWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_FNum &gt;in_SNum" />
      </ui:InterruptibleWhile.Condition>
    </ui:InterruptibleWhile>
    <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="706,1572" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="670,1404" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="608,83" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[in_SNum]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_SNum - in_FNum]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="608,1170" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
            <ui:InterruptibleWhile.Body>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="572,1002" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_FNum &gt; in_SNum]" sap:VirtualizedContainerService.HintSize="510,891" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,370" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[in_SNum]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;GCD od two numbers is&quot;+out_GCD.ToString]" />
                      <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_7" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,370" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_8">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[in_FNum]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;GCD od two numbers is&quot;+out_GCD.ToString]" />
                      <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ui:InterruptibleWhile.Body>
            <ui:InterruptibleWhile.Condition>
              <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_FNum mod in_SNum = 0 Or in_SNum mod in_FNum =0" />
            </ui:InterruptibleWhile.Condition>
          </ui:InterruptibleWhile>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <ui:InterruptibleWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_FNum &lt;in_SNum" />
      </ui:InterruptibleWhile.Condition>
    </ui:InterruptibleWhile>
    <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="706,561" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,393" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[out_GCD]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_FNum]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[&quot;GCD of two number is&quot; + in_FNum.ToString]" />
          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_8" />
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <ui:InterruptibleWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_FNum = in_SNum" />
      </ui:InterruptibleWhile.Condition>
    </ui:InterruptibleWhile>
  </Sequence>
</Activity>